##############################
## Prefix Key
##############################

set-option -g prefix C-t
bind-key C-t send-prefix
unbind-key C-b


##############################
## Customize statusline
##############################

# Length left
set-option -g status-left-length 90
set-option -g status-right-length 90

# Contents left
# set-option -g status-left '#H:[#P]'
# set-option -g status-left 'tmux:[#P]'
set-option -g status-left '#(memory) #(cpu-usage) #(storage)'

# Contents right
if-shell 'uname | grep -q Darwin' \
    "set-option -g status-right '#[fg=cyan]#S    #[fg=white]#(wifi)'" \
    "set-option -g status-right '#[fg=cyan]#S'"

# Reload statusbar
set-option -g status-interval 5

# Centerize
set-option -g status-justify centre

# Enable visual notification
set-window-option -g monitor-activity on

# Enable visual notification
set-option -g visual-activity on

# Enable statusbar top
set-option -g status-position top

# Enable pane statusbar bottom
set-option -g pane-border-status bottom
set-option -g pane-border-format "#[bg=black] [#P]:#(tmux-pane-status #{pane_current_command})"


##############################
## COLOUR (Solarized dark)
##############################

# default statusbar colors
set-option -g status-style bg=black,fg=yellow

# default window title colors
set-window-option -g window-status-style bg=default,fg=brightblue

# active window title colors
set-window-option -g window-status-current-style bg=default,fg=brightred

# pane border
set-option -g pane-border-style fg=brightred #base02
set-option -g pane-active-border-style fg=cyan #base01

# message text
set-option -g message-style bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red


##############################
## GENERAL OPTION
##############################

# ウィンドウのインデックスを1からにする
set-option -g base-index 1

# ペインのインデックスを1からにする
set-window-option -g pane-base-index 1

# 待機時間をなくす
set-option -s escape-time 0

# スクロールを可能にする
set-window-option -g mouse on

# 256色端末を使用する
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

# バッファを10000行に設定(デフォルト2000行)
set-option -g history-limit 10000


##############################
## KEY BINDING
##############################

# Vi キーバインド
set-window-option -g mode-keys vi

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vimのキーバインドでウィンドウを移動する
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


##############################
## COPY MODE
##############################

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"

# Prefix+Enter/y でコピー
# bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
bind-key p paste-buffer

# vim <=> tmux 間でクリップボード利用を可能にする
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# クリップボード共有を有効にする
# for mac
if-shell "uname | grep -q Darwin" \
    'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
if-shell "uname | grep -q Darwin" \
    'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
    'bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# for Linux
# tmuxのbufferとxのclipboardを連携させる
if-shell 'type xsel' \
    "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
    "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
    "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xsel -ib'"
